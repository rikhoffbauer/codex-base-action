name: "Codex CLI Base Action"
description: "Run the OpenAI Codex CLI in GitHub Actions workflows"
branding:
  icon: "code"
  color: "blue"

inputs:
  prompt:
    description: "The prompt to send to Codex CLI (mutually exclusive with prompt_file)"
    required: false
    default: ""
  prompt_file:
    description: "Path to a file containing the prompt to send to Codex CLI (mutually exclusive with prompt)"
    required: false
    default: ""
  config:
    description: "Codex CLI config as TOML string or path to config TOML file"
    required: false
    default: ""
  codex_args:
    description: "Additional arguments to pass directly to `codex exec`"
    required: false
    default: ""
  openai_api_key:
    description: "OpenAI API key used to authenticate the Codex CLI"
    required: false
    default: ""
  chatgpt_auth_json:
    description: "Contents of Codex auth.json for ChatGPT plans, or a path to the file"
    required: false
    default: ""
  use_node_cache:
    description: "Whether to use Node.js dependency caching (set to true only for Node.js projects with lock files)"
    required: false
    default: "false"
  path_to_codex_executable:
    description: "Optional path to a custom Codex CLI executable. If provided, skips automatic installation and uses this executable instead."
    required: false
    default: ""
  path_to_bun_executable:
    description: "Optional path to a custom Bun executable. If provided, skips automatic Bun installation and uses this executable instead."
    required: false
    default: ""

outputs:
  conclusion:
    description: "Execution status of Codex CLI ('success' or 'failure')"
    value: ${{ steps.run_codex.outputs.conclusion }}
  execution_file:
    description: "Path to the JSON file containing Codex CLI execution log"
    value: ${{ steps.run_codex.outputs.execution_file }}

runs:
  using: "composite"
  steps:
    - name: Setup Node.js (with cache)
      if: inputs.use_node_cache == 'true'
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
      with:
        node-version: ${{ env.NODE_VERSION || '20.x' }}
        cache: npm

    - name: Setup Node.js
      if: inputs.use_node_cache != 'true'
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
      with:
        node-version: ${{ env.NODE_VERSION || '20.x' }}

    - name: Install Bun
      if: inputs.path_to_bun_executable == ''
      uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76
      with:
        bun-version: 1.2.11

    - name: Setup Custom Bun Path
      if: inputs.path_to_bun_executable != ''
      shell: bash
      run: |
        echo "Using custom Bun executable: ${{ inputs.path_to_bun_executable }}"
        BUN_DIR=$(dirname "${{ inputs.path_to_bun_executable }}")
        echo "$BUN_DIR" >> "$GITHUB_PATH"
        bun --version

    - name: Install Dependencies
      shell: bash
      run: |
        cd ${GITHUB_ACTION_PATH}
        bun install

    - name: Install Codex CLI
      shell: bash
      run: |
        if [ -z "${{ inputs.path_to_codex_executable }}" ]; then
          echo "Installing Codex CLI..."
          npm install -g @openai/codex@0.36.0
          codex --version
        else
          echo "Using custom Codex executable: ${{ inputs.path_to_codex_executable }}"
          CODEX_DIR=$(dirname "${{ inputs.path_to_codex_executable }}")
          echo "$CODEX_DIR" >> "$GITHUB_PATH"
          codex --version
        fi

    - name: Mask credentials
      shell: bash
      run: |
        [ -n "${{ inputs.openai_api_key }}" ] && echo "::add-mask::${{ inputs.openai_api_key }}"
        [ -n "${{ inputs.chatgpt_auth_json }}" ] && echo "::add-mask::${{ inputs.chatgpt_auth_json }}"

    - name: Run Codex CLI Action
      shell: bash
      id: run_codex
      run: |
        set -Eeuo pipefail
        if [ -n "${CODEX_WORKING_DIR:-}" ]; then
          echo "Changing directory to CODEX_WORKING_DIR: $CODEX_WORKING_DIR"
          if [ -d "$CODEX_WORKING_DIR" ]; then
            cd "$CODEX_WORKING_DIR"
          else
            echo "ERROR: CODEX_WORKING_DIR does not exist: $CODEX_WORKING_DIR" >&2
            exit 1
          fi
        fi
        bun run "${GITHUB_ACTION_PATH}/src/index.ts"
      env:
        INPUT_PROMPT: ${{ inputs.prompt }}
        INPUT_PROMPT_FILE: ${{ inputs.prompt_file }}
        INPUT_CONFIG: ${{ inputs.config }}
        INPUT_CODEX_ARGS: ${{ inputs.codex_args }}
        INPUT_CHATGPT_AUTH_JSON: ${{ inputs.chatgpt_auth_json }}
        INPUT_PATH_TO_CODEX_EXECUTABLE: ${{ inputs.path_to_codex_executable }}
        INPUT_PATH_TO_BUN_EXECUTABLE: ${{ inputs.path_to_bun_executable }}
        OPENAI_API_KEY: ${{ inputs.openai_api_key }}
